ARM GAS  /tmp/ccLjMetr.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_hal.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c"
  18              		.global	uwTick
  19              		.section	.bss.uwTick,"aw",%nobits
  20              		.align	2
  23              	uwTick:
  24 0000 00000000 		.space	4
  25              		.global	uwTickPrio
  26              		.section	.data.uwTickPrio,"aw"
  27              		.align	2
  30              	uwTickPrio:
  31 0000 04000000 		.word	4
  32              		.global	uwTickFreq
  33              		.section	.data.uwTickFreq,"aw"
  36              	uwTickFreq:
  37 0000 01       		.byte	1
  38              		.section	.text.HAL_Init,"ax",%progbits
  39              		.align	1
  40              		.global	HAL_Init
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  45              	HAL_Init:
  46              	.LFB40:
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @file    stm32f0xx_hal.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @verbatim
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Control functions
ARM GAS  /tmp/ccLjMetr.s 			page 2


  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @endverbatim
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @attention
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #include "stm32f0xx_hal.h"
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @addtogroup STM32F0xx_HAL_Driver
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief STM32F0xx HAL Driver version number V1.7.3
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB1   (0x07U) /*!< [23:16] sub1 version */
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB2   (0x03U) /*!< [15:8]  sub2 version */
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */ 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION         ((__STM32F0xx_HAL_VERSION_MAIN << 24U)\
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB1 << 16U)\
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB2 << 8U )\
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_RC))
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Macros HAL Private Macros
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
ARM GAS  /tmp/ccLjMetr.s 			page 3


  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Exported Variables
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __IO uint32_t uwTick;
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    Initialization and de-initialization functions
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    [..]  This section provides functions allowing to:
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           and the backup domain when enabled.
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) de-Initializes common part of the HAL.
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           Tick interrupt priority.
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              handled in milliseconds basis.
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             ISR process will be blocked. 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This function configures the Flash prefetch,
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
ARM GAS  /tmp/ccLjMetr.s 			page 4


 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       the clock configuration
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note The time base configuration is based on HSI clock when exiting from Reset.
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Once done, time base tick start incrementing.
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       In the default implementation,Systick is used as source of time base.
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  47              		.loc 1 142 1
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 1, uses_anonymous_args = 0
  51 0000 80B5     		push	{r7, lr}
  52              	.LCFI0:
  53              		.cfi_def_cfa_offset 8
  54              		.cfi_offset 7, -8
  55              		.cfi_offset 14, -4
  56 0002 00AF     		add	r7, sp, #0
  57              	.LCFI1:
  58              		.cfi_def_cfa_register 7
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  59              		.loc 1 145 3
  60 0004 074B     		ldr	r3, .L3
  61 0006 1A68     		ldr	r2, [r3]
  62 0008 064B     		ldr	r3, .L3
  63 000a 1021     		movs	r1, #16
  64 000c 0A43     		orrs	r2, r1
  65 000e 1A60     		str	r2, [r3]
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
  66              		.loc 1 150 3
  67 0010 0320     		movs	r0, #3
  68 0012 FFF7FEFF 		bl	HAL_InitTick
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Init the low level hardware */
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspInit();
  69              		.loc 1 153 3
  70 0016 FFF7FEFF 		bl	HAL_MspInit
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
  71              		.loc 1 156 10
  72 001a 0023     		movs	r3, #0
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  73              		.loc 1 157 1
  74 001c 1800     		movs	r0, r3
  75 001e BD46     		mov	sp, r7
  76              		@ sp needed
  77 0020 80BD     		pop	{r7, pc}
  78              	.L4:
ARM GAS  /tmp/ccLjMetr.s 			page 5


  79 0022 C046     		.align	2
  80              	.L3:
  81 0024 00200240 		.word	1073881088
  82              		.cfi_endproc
  83              	.LFE40:
  85              		.section	.text.HAL_DeInit,"ax",%progbits
  86              		.align	1
  87              		.global	HAL_DeInit
  88              		.syntax unified
  89              		.code	16
  90              		.thumb_func
  92              	HAL_DeInit:
  93              	.LFB41:
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function de-Initialize common part of the HAL and stops the SysTick
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        of time base.
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is optional.
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  94              		.loc 1 166 1
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98 0000 80B5     		push	{r7, lr}
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 00AF     		add	r7, sp, #0
 104              	.LCFI3:
 105              		.cfi_def_cfa_register 7
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 106              		.loc 1 168 3
 107 0004 0D4B     		ldr	r3, .L7
 108 0006 0122     		movs	r2, #1
 109 0008 5242     		rsbs	r2, r2, #0
 110 000a 1A61     		str	r2, [r3, #16]
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 111              		.loc 1 169 3
 112 000c 0B4B     		ldr	r3, .L7
 113 000e 0022     		movs	r2, #0
 114 0010 1A61     		str	r2, [r3, #16]
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 115              		.loc 1 171 3
 116 0012 0A4B     		ldr	r3, .L7
 117 0014 0122     		movs	r2, #1
 118 0016 5242     		rsbs	r2, r2, #0
 119 0018 DA60     		str	r2, [r3, #12]
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 120              		.loc 1 172 3
 121 001a 084B     		ldr	r3, .L7
 122 001c 0022     		movs	r2, #0
ARM GAS  /tmp/ccLjMetr.s 			page 6


 123 001e DA60     		str	r2, [r3, #12]
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 124              		.loc 1 174 3
 125 0020 064B     		ldr	r3, .L7
 126 0022 0122     		movs	r2, #1
 127 0024 5242     		rsbs	r2, r2, #0
 128 0026 9A62     		str	r2, [r3, #40]
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 129              		.loc 1 175 3
 130 0028 044B     		ldr	r3, .L7
 131 002a 0022     		movs	r2, #0
 132 002c 9A62     		str	r2, [r3, #40]
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* De-Init the low level hardware */
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspDeInit();
 133              		.loc 1 178 3
 134 002e FFF7FEFF 		bl	HAL_MspDeInit
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 135              		.loc 1 181 10
 136 0032 0023     		movs	r3, #0
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 137              		.loc 1 182 1
 138 0034 1800     		movs	r0, r3
 139 0036 BD46     		mov	sp, r7
 140              		@ sp needed
 141 0038 80BD     		pop	{r7, pc}
 142              	.L8:
 143 003a C046     		.align	2
 144              	.L7:
 145 003c 00100240 		.word	1073876992
 146              		.cfi_endproc
 147              	.LFE41:
 149              		.section	.text.HAL_MspInit,"ax",%progbits
 150              		.align	1
 151              		.weak	HAL_MspInit
 152              		.syntax unified
 153              		.code	16
 154              		.thumb_func
 156              	HAL_MspInit:
 157              	.LFB42:
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Initialize the MSP.
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspInit(void)
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 158              		.loc 1 189 1
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 1, uses_anonymous_args = 0
 162 0000 80B5     		push	{r7, lr}
 163              	.LCFI4:
 164              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccLjMetr.s 			page 7


 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              	.LCFI5:
 169              		.cfi_def_cfa_register 7
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 170              		.loc 1 193 1
 171 0004 C046     		nop
 172 0006 BD46     		mov	sp, r7
 173              		@ sp needed
 174 0008 80BD     		pop	{r7, pc}
 175              		.cfi_endproc
 176              	.LFE42:
 178              		.section	.text.HAL_MspDeInit,"ax",%progbits
 179              		.align	1
 180              		.weak	HAL_MspDeInit
 181              		.syntax unified
 182              		.code	16
 183              		.thumb_func
 185              	HAL_MspDeInit:
 186              	.LFB43:
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  DeInitializes the MSP.
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspDeInit(void)
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 187              		.loc 1 200 1
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191 0000 80B5     		push	{r7, lr}
 192              	.LCFI6:
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 00AF     		add	r7, sp, #0
 197              	.LCFI7:
 198              		.cfi_def_cfa_register 7
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 199              		.loc 1 204 1
 200 0004 C046     		nop
 201 0006 BD46     		mov	sp, r7
 202              		@ sp needed
 203 0008 80BD     		pop	{r7, pc}
 204              		.cfi_endproc
 205              	.LFE43:
 207              		.section	.text.HAL_InitTick,"ax",%progbits
 208              		.align	1
 209              		.weak	HAL_InitTick
ARM GAS  /tmp/ccLjMetr.s 			page 8


 210              		.syntax unified
 211              		.code	16
 212              		.thumb_func
 214              	HAL_InitTick:
 215              	.LFB44:
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function configures the source of the time base. 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Tick interrupt priority.
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower) 
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementation  in user file.
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 216              		.loc 1 223 1
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 8
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220 0000 90B5     		push	{r4, r7, lr}
 221              	.LCFI8:
 222              		.cfi_def_cfa_offset 12
 223              		.cfi_offset 4, -12
 224              		.cfi_offset 7, -8
 225              		.cfi_offset 14, -4
 226 0002 83B0     		sub	sp, sp, #12
 227              	.LCFI9:
 228              		.cfi_def_cfa_offset 24
 229 0004 00AF     		add	r7, sp, #0
 230              	.LCFI10:
 231              		.cfi_def_cfa_register 7
 232 0006 7860     		str	r0, [r7, #4]
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 233              		.loc 1 225 7
 234 0008 144B     		ldr	r3, .L16
 235 000a 1C68     		ldr	r4, [r3]
 236              		.loc 1 225 51
 237 000c 144B     		ldr	r3, .L16+4
 238 000e 1B78     		ldrb	r3, [r3]
 239 0010 1900     		movs	r1, r3
 240 0012 FA23     		movs	r3, #250
 241 0014 9800     		lsls	r0, r3, #2
 242 0016 FFF7FEFF 		bl	__aeabi_uidiv
 243 001a 0300     		movs	r3, r0
 244              		.loc 1 225 7
 245 001c 1900     		movs	r1, r3
 246 001e 2000     		movs	r0, r4
ARM GAS  /tmp/ccLjMetr.s 			page 9


 247 0020 FFF7FEFF 		bl	__aeabi_uidiv
 248 0024 0300     		movs	r3, r0
 249 0026 1800     		movs	r0, r3
 250 0028 FFF7FEFF 		bl	HAL_SYSTICK_Config
 251 002c 031E     		subs	r3, r0, #0
 252              		.loc 1 225 6 discriminator 1
 253 002e 01D0     		beq	.L12
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     return HAL_ERROR;
 254              		.loc 1 227 12
 255 0030 0123     		movs	r3, #1
 256 0032 0FE0     		b	.L13
 257              	.L12:
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure the SysTick IRQ priority */
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 258              		.loc 1 231 6
 259 0034 7B68     		ldr	r3, [r7, #4]
 260 0036 032B     		cmp	r3, #3
 261 0038 0BD8     		bhi	.L14
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 262              		.loc 1 233 5
 263 003a 7968     		ldr	r1, [r7, #4]
 264 003c 0123     		movs	r3, #1
 265 003e 5B42     		rsbs	r3, r3, #0
 266 0040 0022     		movs	r2, #0
 267 0042 1800     		movs	r0, r3
 268 0044 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickPrio = TickPriority;
 269              		.loc 1 234 16
 270 0048 064B     		ldr	r3, .L16+8
 271 004a 7A68     		ldr	r2, [r7, #4]
 272 004c 1A60     		str	r2, [r3]
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   else
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     return HAL_ERROR;
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    /* Return function status */
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 273              		.loc 1 242 10
 274 004e 0023     		movs	r3, #0
 275 0050 00E0     		b	.L13
 276              	.L14:
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 277              		.loc 1 238 12
 278 0052 0123     		movs	r3, #1
 279              	.L13:
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 280              		.loc 1 243 1
 281 0054 1800     		movs	r0, r3
 282 0056 BD46     		mov	sp, r7
 283 0058 03B0     		add	sp, sp, #12
 284              		@ sp needed
ARM GAS  /tmp/ccLjMetr.s 			page 10


 285 005a 90BD     		pop	{r4, r7, pc}
 286              	.L17:
 287              		.align	2
 288              	.L16:
 289 005c 00000000 		.word	SystemCoreClock
 290 0060 00000000 		.word	uwTickFreq
 291 0064 00000000 		.word	uwTickPrio
 292              		.cfi_endproc
 293              	.LFE44:
 295              		.section	.text.HAL_IncTick,"ax",%progbits
 296              		.align	1
 297              		.weak	HAL_IncTick
 298              		.syntax unified
 299              		.code	16
 300              		.thumb_func
 302              	HAL_IncTick:
 303              	.LFB45:
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    HAL Control functions
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                       ##### HAL Control functions #####
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]  This section provides functions allowing to:
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a tick value in millisecond
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Suspend the time base source interrupt
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Resume the time base source interrupt
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the HAL API driver version
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device identifier
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device revision identifier
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        used as application time base.
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       in SysTick ISR.
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_IncTick(void)
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 304              		.loc 1 282 1
ARM GAS  /tmp/ccLjMetr.s 			page 11


 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 80B5     		push	{r7, lr}
 309              	.LCFI11:
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 00AF     		add	r7, sp, #0
 314              	.LCFI12:
 315              		.cfi_def_cfa_register 7
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick += uwTickFreq;
 316              		.loc 1 283 10
 317 0004 054B     		ldr	r3, .L19
 318 0006 1B78     		ldrb	r3, [r3]
 319 0008 1A00     		movs	r2, r3
 320 000a 054B     		ldr	r3, .L19+4
 321 000c 1B68     		ldr	r3, [r3]
 322 000e D218     		adds	r2, r2, r3
 323 0010 034B     		ldr	r3, .L19+4
 324 0012 1A60     		str	r2, [r3]
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 325              		.loc 1 284 1
 326 0014 C046     		nop
 327 0016 BD46     		mov	sp, r7
 328              		@ sp needed
 329 0018 80BD     		pop	{r7, pc}
 330              	.L20:
 331 001a C046     		.align	2
 332              	.L19:
 333 001c 00000000 		.word	uwTickFreq
 334 0020 00000000 		.word	uwTick
 335              		.cfi_endproc
 336              	.LFE45:
 338              		.section	.text.HAL_GetTick,"ax",%progbits
 339              		.align	1
 340              		.weak	HAL_GetTick
 341              		.syntax unified
 342              		.code	16
 343              		.thumb_func
 345              	HAL_GetTick:
 346              	.LFB46:
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Provides a tick value in millisecond.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note   This function is declared as __weak  to be overwritten  in case of other 
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick value
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 347              		.loc 1 293 1
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351 0000 80B5     		push	{r7, lr}
 352              	.LCFI13:
ARM GAS  /tmp/ccLjMetr.s 			page 12


 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 00AF     		add	r7, sp, #0
 357              	.LCFI14:
 358              		.cfi_def_cfa_register 7
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 359              		.loc 1 294 10
 360 0004 024B     		ldr	r3, .L23
 361 0006 1B68     		ldr	r3, [r3]
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 362              		.loc 1 295 1
 363 0008 1800     		movs	r0, r3
 364 000a BD46     		mov	sp, r7
 365              		@ sp needed
 366 000c 80BD     		pop	{r7, pc}
 367              	.L24:
 368 000e C046     		.align	2
 369              	.L23:
 370 0010 00000000 		.word	uwTick
 371              		.cfi_endproc
 372              	.LFE46:
 374              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 375              		.align	1
 376              		.global	HAL_GetTickPrio
 377              		.syntax unified
 378              		.code	16
 379              		.thumb_func
 381              	HAL_GetTickPrio:
 382              	.LFB47:
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function returns a tick priority.
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick priority
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 383              		.loc 1 302 1
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387 0000 80B5     		push	{r7, lr}
 388              	.LCFI15:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 7, -8
 391              		.cfi_offset 14, -4
 392 0002 00AF     		add	r7, sp, #0
 393              	.LCFI16:
 394              		.cfi_def_cfa_register 7
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickPrio;
 395              		.loc 1 303 10
 396 0004 024B     		ldr	r3, .L27
 397 0006 1B68     		ldr	r3, [r3]
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 398              		.loc 1 304 1
 399 0008 1800     		movs	r0, r3
 400 000a BD46     		mov	sp, r7
ARM GAS  /tmp/ccLjMetr.s 			page 13


 401              		@ sp needed
 402 000c 80BD     		pop	{r7, pc}
 403              	.L28:
 404 000e C046     		.align	2
 405              	.L27:
 406 0010 00000000 		.word	uwTickPrio
 407              		.cfi_endproc
 408              	.LFE47:
 410              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 411              		.align	1
 412              		.global	HAL_SetTickFreq
 413              		.syntax unified
 414              		.code	16
 415              		.thumb_func
 417              	HAL_SetTickFreq:
 418              	.LFB48:
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Set new tick Freq.
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval status
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 419              		.loc 1 311 1
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 16
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 424              	.LCFI17:
 425              		.cfi_def_cfa_offset 20
 426              		.cfi_offset 4, -20
 427              		.cfi_offset 5, -16
 428              		.cfi_offset 6, -12
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 85B0     		sub	sp, sp, #20
 432              	.LCFI18:
 433              		.cfi_def_cfa_offset 40
 434 0004 00AF     		add	r7, sp, #0
 435              	.LCFI19:
 436              		.cfi_def_cfa_register 7
 437 0006 0200     		movs	r2, r0
 438 0008 FB1D     		adds	r3, r7, #7
 439 000a 1A70     		strb	r2, [r3]
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 440              		.loc 1 312 21
 441 000c 0F21     		movs	r1, #15
 442 000e 7B18     		adds	r3, r7, r1
 443 0010 0022     		movs	r2, #0
 444 0012 1A70     		strb	r2, [r3]
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (uwTickFreq != Freq)
 445              		.loc 1 317 18
 446 0014 134B     		ldr	r3, .L32
ARM GAS  /tmp/ccLjMetr.s 			page 14


 447 0016 1B78     		ldrb	r3, [r3]
 448              		.loc 1 317 6
 449 0018 FA1D     		adds	r2, r7, #7
 450 001a 1278     		ldrb	r2, [r2]
 451 001c 9A42     		cmp	r2, r3
 452 001e 19D0     		beq	.L30
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Back up uwTickFreq frequency */
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     prevTickFreq = uwTickFreq;
 453              		.loc 1 320 18
 454 0020 0E26     		movs	r6, #14
 455 0022 BB19     		adds	r3, r7, r6
 456 0024 0F4A     		ldr	r2, .L32
 457 0026 1278     		ldrb	r2, [r2]
 458 0028 1A70     		strb	r2, [r3]
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickFreq = Freq;
 459              		.loc 1 323 16
 460 002a 0E4B     		ldr	r3, .L32
 461 002c FA1D     		adds	r2, r7, #7
 462 002e 1278     		ldrb	r2, [r2]
 463 0030 1A70     		strb	r2, [r3]
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Apply the new tick Freq */
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 464              		.loc 1 326 14
 465 0032 0D4B     		ldr	r3, .L32+4
 466 0034 1B68     		ldr	r3, [r3]
 467 0036 0D00     		movs	r5, r1
 468 0038 7C18     		adds	r4, r7, r1
 469 003a 1800     		movs	r0, r3
 470 003c FFF7FEFF 		bl	HAL_InitTick
 471 0040 0300     		movs	r3, r0
 472 0042 2370     		strb	r3, [r4]
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     if (status != HAL_OK)
 473              		.loc 1 328 8
 474 0044 7B19     		adds	r3, r7, r5
 475 0046 1B78     		ldrb	r3, [r3]
 476 0048 002B     		cmp	r3, #0
 477 004a 03D0     		beq	.L30
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     {
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       /* Restore previous tick frequency */
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       uwTickFreq = prevTickFreq;
 478              		.loc 1 331 18
 479 004c 054B     		ldr	r3, .L32
 480 004e BA19     		adds	r2, r7, r6
 481 0050 1278     		ldrb	r2, [r2]
 482 0052 1A70     		strb	r2, [r3]
 483              	.L30:
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     }
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return status;
 484              		.loc 1 335 10
 485 0054 0F23     		movs	r3, #15
ARM GAS  /tmp/ccLjMetr.s 			page 15


 486 0056 FB18     		adds	r3, r7, r3
 487 0058 1B78     		ldrb	r3, [r3]
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 488              		.loc 1 336 1
 489 005a 1800     		movs	r0, r3
 490 005c BD46     		mov	sp, r7
 491 005e 05B0     		add	sp, sp, #20
 492              		@ sp needed
 493 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 494              	.L33:
 495 0062 C046     		.align	2
 496              	.L32:
 497 0064 00000000 		.word	uwTickFreq
 498 0068 00000000 		.word	uwTickPrio
 499              		.cfi_endproc
 500              	.LFE48:
 502              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 503              		.align	1
 504              		.global	HAL_GetTickFreq
 505              		.syntax unified
 506              		.code	16
 507              		.thumb_func
 509              	HAL_GetTickFreq:
 510              	.LFB49:
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief return tick frequency.
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick period in Hz
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 511              		.loc 1 343 1
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 1, uses_anonymous_args = 0
 515 0000 80B5     		push	{r7, lr}
 516              	.LCFI20:
 517              		.cfi_def_cfa_offset 8
 518              		.cfi_offset 7, -8
 519              		.cfi_offset 14, -4
 520 0002 00AF     		add	r7, sp, #0
 521              	.LCFI21:
 522              		.cfi_def_cfa_register 7
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickFreq;
 523              		.loc 1 344 10
 524 0004 024B     		ldr	r3, .L36
 525 0006 1B78     		ldrb	r3, [r3]
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 526              		.loc 1 345 1
 527 0008 1800     		movs	r0, r3
 528 000a BD46     		mov	sp, r7
 529              		@ sp needed
 530 000c 80BD     		pop	{r7, pc}
 531              	.L37:
 532 000e C046     		.align	2
 533              	.L36:
 534 0010 00000000 		.word	uwTickFreq
ARM GAS  /tmp/ccLjMetr.s 			page 16


 535              		.cfi_endproc
 536              	.LFE49:
 538              		.section	.text.HAL_Delay,"ax",%progbits
 539              		.align	1
 540              		.weak	HAL_Delay
 541              		.syntax unified
 542              		.code	16
 543              		.thumb_func
 545              	HAL_Delay:
 546              	.LFB50:
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based 
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        on variable incremented.
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is incremented.
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 547              		.loc 1 359 1
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 16
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 80B5     		push	{r7, lr}
 552              	.LCFI22:
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 7, -8
 555              		.cfi_offset 14, -4
 556 0002 84B0     		sub	sp, sp, #16
 557              	.LCFI23:
 558              		.cfi_def_cfa_offset 24
 559 0004 00AF     		add	r7, sp, #0
 560              	.LCFI24:
 561              		.cfi_def_cfa_register 7
 562 0006 7860     		str	r0, [r7, #4]
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 563              		.loc 1 360 24
 564 0008 FFF7FEFF 		bl	HAL_GetTick
 565 000c 0300     		movs	r3, r0
 566 000e BB60     		str	r3, [r7, #8]
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t wait = Delay;
 567              		.loc 1 361 12
 568 0010 7B68     		ldr	r3, [r7, #4]
 569 0012 FB60     		str	r3, [r7, #12]
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 570              		.loc 1 364 6
 571 0014 FB68     		ldr	r3, [r7, #12]
 572 0016 0133     		adds	r3, r3, #1
 573 0018 05D0     		beq	.L42
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
ARM GAS  /tmp/ccLjMetr.s 			page 17


 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 574              		.loc 1 366 13
 575 001a 0A4B     		ldr	r3, .L43
 576 001c 1B78     		ldrb	r3, [r3]
 577 001e 1A00     		movs	r2, r3
 578              		.loc 1 366 10
 579 0020 FB68     		ldr	r3, [r7, #12]
 580 0022 9B18     		adds	r3, r3, r2
 581 0024 FB60     		str	r3, [r7, #12]
 582              	.L42:
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 583              		.loc 1 369 8
 584 0026 C046     		nop
 585              	.L40:
 586              		.loc 1 369 10 discriminator 1
 587 0028 FFF7FEFF 		bl	HAL_GetTick
 588 002c 0200     		movs	r2, r0
 589              		.loc 1 369 24 discriminator 1
 590 002e BB68     		ldr	r3, [r7, #8]
 591 0030 D31A     		subs	r3, r2, r3
 592              		.loc 1 369 37 discriminator 1
 593 0032 FA68     		ldr	r2, [r7, #12]
 594 0034 9A42     		cmp	r2, r3
 595 0036 F7D8     		bhi	.L40
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 596              		.loc 1 372 1
 597 0038 C046     		nop
 598 003a C046     		nop
 599 003c BD46     		mov	sp, r7
 600 003e 04B0     		add	sp, sp, #16
 601              		@ sp needed
 602 0040 80BD     		pop	{r7, pc}
 603              	.L44:
 604 0042 C046     		.align	2
 605              	.L43:
 606 0044 00000000 		.word	uwTickFreq
 607              		.cfi_endproc
 608              	.LFE50:
 610              		.section	.text.HAL_SuspendTick,"ax",%progbits
 611              		.align	1
 612              		.weak	HAL_SuspendTick
 613              		.syntax unified
 614              		.code	16
 615              		.thumb_func
 617              	HAL_SuspendTick:
 618              	.LFB51:
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Suspend Tick increment.
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is suspended.
ARM GAS  /tmp/ccLjMetr.s 			page 18


 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_SuspendTick(void)
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 619              		.loc 1 386 1
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623 0000 80B5     		push	{r7, lr}
 624              	.LCFI25:
 625              		.cfi_def_cfa_offset 8
 626              		.cfi_offset 7, -8
 627              		.cfi_offset 14, -4
 628 0002 00AF     		add	r7, sp, #0
 629              	.LCFI26:
 630              		.cfi_def_cfa_register 7
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Disable SysTick Interrupt */
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 631              		.loc 1 388 3
 632 0004 044B     		ldr	r3, .L46
 633 0006 1A68     		ldr	r2, [r3]
 634 0008 034B     		ldr	r3, .L46
 635 000a 0221     		movs	r1, #2
 636 000c 8A43     		bics	r2, r1
 637 000e 1A60     		str	r2, [r3]
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 638              		.loc 1 389 1
 639 0010 C046     		nop
 640 0012 BD46     		mov	sp, r7
 641              		@ sp needed
 642 0014 80BD     		pop	{r7, pc}
 643              	.L47:
 644 0016 C046     		.align	2
 645              	.L46:
 646 0018 10E000E0 		.word	-536813552
 647              		.cfi_endproc
 648              	.LFE51:
 650              		.section	.text.HAL_ResumeTick,"ax",%progbits
 651              		.align	1
 652              		.weak	HAL_ResumeTick
 653              		.syntax unified
 654              		.code	16
 655              		.thumb_func
 657              	HAL_ResumeTick:
 658              	.LFB52:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Resume Tick increment.
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is resumed.
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak  to be overwritten  in case of other
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
ARM GAS  /tmp/ccLjMetr.s 			page 19


 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_ResumeTick(void)
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 659              		.loc 1 402 1
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663 0000 80B5     		push	{r7, lr}
 664              	.LCFI27:
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 00AF     		add	r7, sp, #0
 669              	.LCFI28:
 670              		.cfi_def_cfa_register 7
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Enable SysTick Interrupt */
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 671              		.loc 1 404 3
 672 0004 044B     		ldr	r3, .L49
 673 0006 1A68     		ldr	r2, [r3]
 674 0008 034B     		ldr	r3, .L49
 675 000a 0221     		movs	r1, #2
 676 000c 0A43     		orrs	r2, r1
 677 000e 1A60     		str	r2, [r3]
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 678              		.loc 1 405 1
 679 0010 C046     		nop
 680 0012 BD46     		mov	sp, r7
 681              		@ sp needed
 682 0014 80BD     		pop	{r7, pc}
 683              	.L50:
 684 0016 C046     		.align	2
 685              	.L49:
 686 0018 10E000E0 		.word	-536813552
 687              		.cfi_endproc
 688              	.LFE52:
 690              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 691              		.align	1
 692              		.global	HAL_GetHalVersion
 693              		.syntax unified
 694              		.code	16
 695              		.thumb_func
 697              	HAL_GetHalVersion:
 698              	.LFB53:
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This method returns the HAL revision
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 699              		.loc 1 412 1
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccLjMetr.s 			page 20


 704              	.LCFI29:
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 7, -8
 707              		.cfi_offset 14, -4
 708 0002 00AF     		add	r7, sp, #0
 709              	.LCFI30:
 710              		.cfi_def_cfa_register 7
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  return __STM32F0xx_HAL_VERSION;
 711              		.loc 1 413 9
 712 0004 014B     		ldr	r3, .L53
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 713              		.loc 1 414 1
 714 0006 1800     		movs	r0, r3
 715 0008 BD46     		mov	sp, r7
 716              		@ sp needed
 717 000a 80BD     		pop	{r7, pc}
 718              	.L54:
 719              		.align	2
 720              	.L53:
 721 000c 00030701 		.word	17236736
 722              		.cfi_endproc
 723              	.LFE53:
 725              		.section	.text.HAL_GetREVID,"ax",%progbits
 726              		.align	1
 727              		.global	HAL_GetREVID
 728              		.syntax unified
 729              		.code	16
 730              		.thumb_func
 732              	HAL_GetREVID:
 733              	.LFB54:
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device revision identifier.
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device revision identifier
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetREVID(void)
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 734              		.loc 1 421 1
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 1, uses_anonymous_args = 0
 738 0000 80B5     		push	{r7, lr}
 739              	.LCFI31:
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 7, -8
 742              		.cfi_offset 14, -4
 743 0002 00AF     		add	r7, sp, #0
 744              	.LCFI32:
 745              		.cfi_def_cfa_register 7
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 746              		.loc 1 422 18
 747 0004 024B     		ldr	r3, .L57
 748 0006 1B68     		ldr	r3, [r3]
 749              		.loc 1 422 28
 750 0008 1B0C     		lsrs	r3, r3, #16
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 751              		.loc 1 423 1
ARM GAS  /tmp/ccLjMetr.s 			page 21


 752 000a 1800     		movs	r0, r3
 753 000c BD46     		mov	sp, r7
 754              		@ sp needed
 755 000e 80BD     		pop	{r7, pc}
 756              	.L58:
 757              		.align	2
 758              	.L57:
 759 0010 00580140 		.word	1073829888
 760              		.cfi_endproc
 761              	.LFE54:
 763              		.section	.text.HAL_GetDEVID,"ax",%progbits
 764              		.align	1
 765              		.global	HAL_GetDEVID
 766              		.syntax unified
 767              		.code	16
 768              		.thumb_func
 770              	HAL_GetDEVID:
 771              	.LFB55:
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device identifier.
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 772              		.loc 1 430 1
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 1, uses_anonymous_args = 0
 776 0000 80B5     		push	{r7, lr}
 777              	.LCFI33:
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0002 00AF     		add	r7, sp, #0
 782              	.LCFI34:
 783              		.cfi_def_cfa_register 7
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 784              		.loc 1 431 18
 785 0004 034B     		ldr	r3, .L61
 786 0006 1B68     		ldr	r3, [r3]
 787              		.loc 1 431 28
 788 0008 1B05     		lsls	r3, r3, #20
 789 000a 1B0D     		lsrs	r3, r3, #20
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 790              		.loc 1 432 1
 791 000c 1800     		movs	r0, r3
 792 000e BD46     		mov	sp, r7
 793              		@ sp needed
 794 0010 80BD     		pop	{r7, pc}
 795              	.L62:
 796 0012 C046     		.align	2
 797              	.L61:
 798 0014 00580140 		.word	1073829888
 799              		.cfi_endproc
 800              	.LFE55:
 802              		.section	.text.HAL_GetUIDw0,"ax",%progbits
ARM GAS  /tmp/ccLjMetr.s 			page 22


 803              		.align	1
 804              		.global	HAL_GetUIDw0
 805              		.syntax unified
 806              		.code	16
 807              		.thumb_func
 809              	HAL_GetUIDw0:
 810              	.LFB56:
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 811              		.loc 1 439 1
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 0
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815 0000 80B5     		push	{r7, lr}
 816              	.LCFI35:
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 7, -8
 819              		.cfi_offset 14, -4
 820 0002 00AF     		add	r7, sp, #0
 821              	.LCFI36:
 822              		.cfi_def_cfa_register 7
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 823              		.loc 1 440 11
 824 0004 024B     		ldr	r3, .L65
 825 0006 1B68     		ldr	r3, [r3]
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 826              		.loc 1 441 1
 827 0008 1800     		movs	r0, r3
 828 000a BD46     		mov	sp, r7
 829              		@ sp needed
 830 000c 80BD     		pop	{r7, pc}
 831              	.L66:
 832 000e C046     		.align	2
 833              	.L65:
 834 0010 ACF7FF1F 		.word	536868780
 835              		.cfi_endproc
 836              	.LFE56:
 838              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 839              		.align	1
 840              		.global	HAL_GetUIDw1
 841              		.syntax unified
 842              		.code	16
 843              		.thumb_func
 845              	HAL_GetUIDw1:
 846              	.LFB57:
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
ARM GAS  /tmp/ccLjMetr.s 			page 23


 847              		.loc 1 448 1
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 1, uses_anonymous_args = 0
 851 0000 80B5     		push	{r7, lr}
 852              	.LCFI37:
 853              		.cfi_def_cfa_offset 8
 854              		.cfi_offset 7, -8
 855              		.cfi_offset 14, -4
 856 0002 00AF     		add	r7, sp, #0
 857              	.LCFI38:
 858              		.cfi_def_cfa_register 7
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 859              		.loc 1 449 11
 860 0004 024B     		ldr	r3, .L69
 861 0006 1B68     		ldr	r3, [r3]
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 862              		.loc 1 450 1
 863 0008 1800     		movs	r0, r3
 864 000a BD46     		mov	sp, r7
 865              		@ sp needed
 866 000c 80BD     		pop	{r7, pc}
 867              	.L70:
 868 000e C046     		.align	2
 869              	.L69:
 870 0010 B0F7FF1F 		.word	536868784
 871              		.cfi_endproc
 872              	.LFE57:
 874              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 875              		.align	1
 876              		.global	HAL_GetUIDw2
 877              		.syntax unified
 878              		.code	16
 879              		.thumb_func
 881              	HAL_GetUIDw2:
 882              	.LFB58:
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 883              		.loc 1 457 1
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 1, uses_anonymous_args = 0
 887 0000 80B5     		push	{r7, lr}
 888              	.LCFI39:
 889              		.cfi_def_cfa_offset 8
 890              		.cfi_offset 7, -8
 891              		.cfi_offset 14, -4
 892 0002 00AF     		add	r7, sp, #0
 893              	.LCFI40:
 894              		.cfi_def_cfa_register 7
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 895              		.loc 1 458 11
ARM GAS  /tmp/ccLjMetr.s 			page 24


 896 0004 024B     		ldr	r3, .L73
 897 0006 1B68     		ldr	r3, [r3]
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 898              		.loc 1 459 1
 899 0008 1800     		movs	r0, r3
 900 000a BD46     		mov	sp, r7
 901              		@ sp needed
 902 000c 80BD     		pop	{r7, pc}
 903              	.L74:
 904 000e C046     		.align	2
 905              	.L73:
 906 0010 B4F7FF1F 		.word	536868788
 907              		.cfi_endproc
 908              	.LFE58:
 910              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 911              		.align	1
 912              		.global	HAL_DBGMCU_EnableDBGStopMode
 913              		.syntax unified
 914              		.code	16
 915              		.thumb_func
 917              	HAL_DBGMCU_EnableDBGStopMode:
 918              	.LFB59:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 919              		.loc 1 466 1
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 1, uses_anonymous_args = 0
 923 0000 80B5     		push	{r7, lr}
 924              	.LCFI41:
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 7, -8
 927              		.cfi_offset 14, -4
 928 0002 00AF     		add	r7, sp, #0
 929              	.LCFI42:
 930              		.cfi_def_cfa_register 7
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 931              		.loc 1 467 3
 932 0004 044B     		ldr	r3, .L76
 933 0006 5A68     		ldr	r2, [r3, #4]
 934 0008 034B     		ldr	r3, .L76
 935 000a 0221     		movs	r1, #2
 936 000c 0A43     		orrs	r2, r1
 937 000e 5A60     		str	r2, [r3, #4]
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 938              		.loc 1 468 1
 939 0010 C046     		nop
 940 0012 BD46     		mov	sp, r7
 941              		@ sp needed
 942 0014 80BD     		pop	{r7, pc}
 943              	.L77:
 944 0016 C046     		.align	2
ARM GAS  /tmp/ccLjMetr.s 			page 25


 945              	.L76:
 946 0018 00580140 		.word	1073829888
 947              		.cfi_endproc
 948              	.LFE59:
 950              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 951              		.align	1
 952              		.global	HAL_DBGMCU_DisableDBGStopMode
 953              		.syntax unified
 954              		.code	16
 955              		.thumb_func
 957              	HAL_DBGMCU_DisableDBGStopMode:
 958              	.LFB60:
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 959              		.loc 1 475 1
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 1, uses_anonymous_args = 0
 963 0000 80B5     		push	{r7, lr}
 964              	.LCFI43:
 965              		.cfi_def_cfa_offset 8
 966              		.cfi_offset 7, -8
 967              		.cfi_offset 14, -4
 968 0002 00AF     		add	r7, sp, #0
 969              	.LCFI44:
 970              		.cfi_def_cfa_register 7
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 971              		.loc 1 476 3
 972 0004 044B     		ldr	r3, .L79
 973 0006 5A68     		ldr	r2, [r3, #4]
 974 0008 034B     		ldr	r3, .L79
 975 000a 0221     		movs	r1, #2
 976 000c 8A43     		bics	r2, r1
 977 000e 5A60     		str	r2, [r3, #4]
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 978              		.loc 1 477 1
 979 0010 C046     		nop
 980 0012 BD46     		mov	sp, r7
 981              		@ sp needed
 982 0014 80BD     		pop	{r7, pc}
 983              	.L80:
 984 0016 C046     		.align	2
 985              	.L79:
 986 0018 00580140 		.word	1073829888
 987              		.cfi_endproc
 988              	.LFE60:
 990              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 991              		.align	1
 992              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 993              		.syntax unified
 994              		.code	16
 995              		.thumb_func
ARM GAS  /tmp/ccLjMetr.s 			page 26


 997              	HAL_DBGMCU_EnableDBGStandbyMode:
 998              	.LFB61:
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 999              		.loc 1 484 1
 1000              		.cfi_startproc
 1001              		@ args = 0, pretend = 0, frame = 0
 1002              		@ frame_needed = 1, uses_anonymous_args = 0
 1003 0000 80B5     		push	{r7, lr}
 1004              	.LCFI45:
 1005              		.cfi_def_cfa_offset 8
 1006              		.cfi_offset 7, -8
 1007              		.cfi_offset 14, -4
 1008 0002 00AF     		add	r7, sp, #0
 1009              	.LCFI46:
 1010              		.cfi_def_cfa_register 7
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1011              		.loc 1 485 3
 1012 0004 044B     		ldr	r3, .L82
 1013 0006 5A68     		ldr	r2, [r3, #4]
 1014 0008 034B     		ldr	r3, .L82
 1015 000a 0421     		movs	r1, #4
 1016 000c 0A43     		orrs	r2, r1
 1017 000e 5A60     		str	r2, [r3, #4]
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 1018              		.loc 1 486 1
 1019 0010 C046     		nop
 1020 0012 BD46     		mov	sp, r7
 1021              		@ sp needed
 1022 0014 80BD     		pop	{r7, pc}
 1023              	.L83:
 1024 0016 C046     		.align	2
 1025              	.L82:
 1026 0018 00580140 		.word	1073829888
 1027              		.cfi_endproc
 1028              	.LFE61:
 1030              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 1031              		.align	1
 1032              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 1033              		.syntax unified
 1034              		.code	16
 1035              		.thumb_func
 1037              	HAL_DBGMCU_DisableDBGStandbyMode:
 1038              	.LFB62:
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 1039              		.loc 1 493 1
ARM GAS  /tmp/ccLjMetr.s 			page 27


 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043 0000 80B5     		push	{r7, lr}
 1044              	.LCFI47:
 1045              		.cfi_def_cfa_offset 8
 1046              		.cfi_offset 7, -8
 1047              		.cfi_offset 14, -4
 1048 0002 00AF     		add	r7, sp, #0
 1049              	.LCFI48:
 1050              		.cfi_def_cfa_register 7
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1051              		.loc 1 494 3
 1052 0004 044B     		ldr	r3, .L85
 1053 0006 5A68     		ldr	r2, [r3, #4]
 1054 0008 034B     		ldr	r3, .L85
 1055 000a 0421     		movs	r1, #4
 1056 000c 8A43     		bics	r2, r1
 1057 000e 5A60     		str	r2, [r3, #4]
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 1058              		.loc 1 495 1
 1059 0010 C046     		nop
 1060 0012 BD46     		mov	sp, r7
 1061              		@ sp needed
 1062 0014 80BD     		pop	{r7, pc}
 1063              	.L86:
 1064 0016 C046     		.align	2
 1065              	.L85:
 1066 0018 00580140 		.word	1073829888
 1067              		.cfi_endproc
 1068              	.LFE62:
 1070              		.text
 1071              	.Letext0:
 1072              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 1073              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1074              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1075              		.file 5 "Drivers/CMSIS/Include/core_cm0.h"
 1076              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1077              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1078              		.file 8 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1079              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccLjMetr.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal.c
     /tmp/ccLjMetr.s:23     .bss.uwTick:00000000 uwTick
     /tmp/ccLjMetr.s:20     .bss.uwTick:00000000 $d
     /tmp/ccLjMetr.s:30     .data.uwTickPrio:00000000 uwTickPrio
     /tmp/ccLjMetr.s:27     .data.uwTickPrio:00000000 $d
     /tmp/ccLjMetr.s:36     .data.uwTickFreq:00000000 uwTickFreq
     /tmp/ccLjMetr.s:39     .text.HAL_Init:00000000 $t
     /tmp/ccLjMetr.s:45     .text.HAL_Init:00000000 HAL_Init
     /tmp/ccLjMetr.s:214    .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccLjMetr.s:156    .text.HAL_MspInit:00000000 HAL_MspInit
     /tmp/ccLjMetr.s:81     .text.HAL_Init:00000024 $d
     /tmp/ccLjMetr.s:86     .text.HAL_DeInit:00000000 $t
     /tmp/ccLjMetr.s:92     .text.HAL_DeInit:00000000 HAL_DeInit
     /tmp/ccLjMetr.s:185    .text.HAL_MspDeInit:00000000 HAL_MspDeInit
     /tmp/ccLjMetr.s:145    .text.HAL_DeInit:0000003c $d
     /tmp/ccLjMetr.s:150    .text.HAL_MspInit:00000000 $t
     /tmp/ccLjMetr.s:179    .text.HAL_MspDeInit:00000000 $t
     /tmp/ccLjMetr.s:208    .text.HAL_InitTick:00000000 $t
     /tmp/ccLjMetr.s:289    .text.HAL_InitTick:0000005c $d
     /tmp/ccLjMetr.s:296    .text.HAL_IncTick:00000000 $t
     /tmp/ccLjMetr.s:302    .text.HAL_IncTick:00000000 HAL_IncTick
     /tmp/ccLjMetr.s:333    .text.HAL_IncTick:0000001c $d
     /tmp/ccLjMetr.s:339    .text.HAL_GetTick:00000000 $t
     /tmp/ccLjMetr.s:345    .text.HAL_GetTick:00000000 HAL_GetTick
     /tmp/ccLjMetr.s:370    .text.HAL_GetTick:00000010 $d
     /tmp/ccLjMetr.s:375    .text.HAL_GetTickPrio:00000000 $t
     /tmp/ccLjMetr.s:381    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
     /tmp/ccLjMetr.s:406    .text.HAL_GetTickPrio:00000010 $d
     /tmp/ccLjMetr.s:411    .text.HAL_SetTickFreq:00000000 $t
     /tmp/ccLjMetr.s:417    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
     /tmp/ccLjMetr.s:497    .text.HAL_SetTickFreq:00000064 $d
     /tmp/ccLjMetr.s:503    .text.HAL_GetTickFreq:00000000 $t
     /tmp/ccLjMetr.s:509    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
     /tmp/ccLjMetr.s:534    .text.HAL_GetTickFreq:00000010 $d
     /tmp/ccLjMetr.s:539    .text.HAL_Delay:00000000 $t
     /tmp/ccLjMetr.s:545    .text.HAL_Delay:00000000 HAL_Delay
     /tmp/ccLjMetr.s:606    .text.HAL_Delay:00000044 $d
     /tmp/ccLjMetr.s:611    .text.HAL_SuspendTick:00000000 $t
     /tmp/ccLjMetr.s:617    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
     /tmp/ccLjMetr.s:646    .text.HAL_SuspendTick:00000018 $d
     /tmp/ccLjMetr.s:651    .text.HAL_ResumeTick:00000000 $t
     /tmp/ccLjMetr.s:657    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
     /tmp/ccLjMetr.s:686    .text.HAL_ResumeTick:00000018 $d
     /tmp/ccLjMetr.s:691    .text.HAL_GetHalVersion:00000000 $t
     /tmp/ccLjMetr.s:697    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
     /tmp/ccLjMetr.s:721    .text.HAL_GetHalVersion:0000000c $d
     /tmp/ccLjMetr.s:726    .text.HAL_GetREVID:00000000 $t
     /tmp/ccLjMetr.s:732    .text.HAL_GetREVID:00000000 HAL_GetREVID
     /tmp/ccLjMetr.s:759    .text.HAL_GetREVID:00000010 $d
     /tmp/ccLjMetr.s:764    .text.HAL_GetDEVID:00000000 $t
     /tmp/ccLjMetr.s:770    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
     /tmp/ccLjMetr.s:798    .text.HAL_GetDEVID:00000014 $d
     /tmp/ccLjMetr.s:803    .text.HAL_GetUIDw0:00000000 $t
     /tmp/ccLjMetr.s:809    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
     /tmp/ccLjMetr.s:834    .text.HAL_GetUIDw0:00000010 $d
     /tmp/ccLjMetr.s:839    .text.HAL_GetUIDw1:00000000 $t
ARM GAS  /tmp/ccLjMetr.s 			page 29


     /tmp/ccLjMetr.s:845    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
     /tmp/ccLjMetr.s:870    .text.HAL_GetUIDw1:00000010 $d
     /tmp/ccLjMetr.s:875    .text.HAL_GetUIDw2:00000000 $t
     /tmp/ccLjMetr.s:881    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
     /tmp/ccLjMetr.s:906    .text.HAL_GetUIDw2:00000010 $d
     /tmp/ccLjMetr.s:911    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
     /tmp/ccLjMetr.s:917    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccLjMetr.s:946    .text.HAL_DBGMCU_EnableDBGStopMode:00000018 $d
     /tmp/ccLjMetr.s:951    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
     /tmp/ccLjMetr.s:957    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccLjMetr.s:986    .text.HAL_DBGMCU_DisableDBGStopMode:00000018 $d
     /tmp/ccLjMetr.s:991    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
     /tmp/ccLjMetr.s:997    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccLjMetr.s:1026   .text.HAL_DBGMCU_EnableDBGStandbyMode:00000018 $d
     /tmp/ccLjMetr.s:1031   .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
     /tmp/ccLjMetr.s:1037   .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccLjMetr.s:1066   .text.HAL_DBGMCU_DisableDBGStandbyMode:00000018 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
