ARM GAS  /tmp/ccj7eOyW.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"syscalls.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/syscalls.c"
  18              		.global	__env
  19              		.section	.bss.__env,"aw",%nobits
  20              		.align	2
  23              	__env:
  24 0000 00000000 		.space	4
  25              		.global	environ
  26              		.section	.data.environ,"aw"
  27              		.align	2
  30              	environ:
  31 0000 00000000 		.word	__env
  32              		.section	.text.initialise_monitor_handles,"ax",%progbits
  33              		.align	1
  34              		.global	initialise_monitor_handles
  35              		.syntax unified
  36              		.code	16
  37              		.thumb_func
  39              	initialise_monitor_handles:
  40              	.LFB25:
   1:Src/syscalls.c **** /**
   2:Src/syscalls.c ****  ******************************************************************************
   3:Src/syscalls.c ****  * @file      syscalls.c
   4:Src/syscalls.c ****  * @author    Auto-generated by STM32CubeMX
   5:Src/syscalls.c ****  * @brief     Minimal System calls file
   6:Src/syscalls.c ****  *
   7:Src/syscalls.c ****  *            For more information about which c-functions
   8:Src/syscalls.c ****  *            need which of these lowlevel functions
   9:Src/syscalls.c ****  *            please consult the Newlib libc-manual
  10:Src/syscalls.c ****  ******************************************************************************
  11:Src/syscalls.c ****  * @attention
  12:Src/syscalls.c ****  *
  13:Src/syscalls.c ****  * Copyright (c) 2020-2024 STMicroelectronics.
  14:Src/syscalls.c ****  * All rights reserved.
  15:Src/syscalls.c ****  *
  16:Src/syscalls.c ****  * This software is licensed under terms that can be found in the LICENSE file
  17:Src/syscalls.c ****  * in the root directory of this software component.
  18:Src/syscalls.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  19:Src/syscalls.c ****  *
  20:Src/syscalls.c ****  ******************************************************************************
  21:Src/syscalls.c ****  */
  22:Src/syscalls.c **** 
ARM GAS  /tmp/ccj7eOyW.s 			page 2


  23:Src/syscalls.c **** /* Includes */
  24:Src/syscalls.c **** #include <sys/stat.h>
  25:Src/syscalls.c **** #include <stdlib.h>
  26:Src/syscalls.c **** #include <errno.h>
  27:Src/syscalls.c **** #include <stdio.h>
  28:Src/syscalls.c **** #include <signal.h>
  29:Src/syscalls.c **** #include <time.h>
  30:Src/syscalls.c **** #include <sys/time.h>
  31:Src/syscalls.c **** #include <sys/times.h>
  32:Src/syscalls.c **** 
  33:Src/syscalls.c **** 
  34:Src/syscalls.c **** /* Variables */
  35:Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  36:Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  37:Src/syscalls.c **** 
  38:Src/syscalls.c **** 
  39:Src/syscalls.c **** char *__env[1] = { 0 };
  40:Src/syscalls.c **** char **environ = __env;
  41:Src/syscalls.c **** 
  42:Src/syscalls.c **** 
  43:Src/syscalls.c **** /* Functions */
  44:Src/syscalls.c **** void initialise_monitor_handles()
  45:Src/syscalls.c **** {
  41              		.loc 1 45 1
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 0
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              	.LCFI1:
  52              		.cfi_def_cfa_register 7
  46:Src/syscalls.c **** }
  53              		.loc 1 46 1
  54 0004 C046     		nop
  55 0006 BD46     		mov	sp, r7
  56              		@ sp needed
  57 0008 80BD     		pop	{r7, pc}
  58              		.cfi_endproc
  59              	.LFE25:
  61              		.section	.text._getpid,"ax",%progbits
  62              		.align	1
  63              		.global	_getpid
  64              		.syntax unified
  65              		.code	16
  66              		.thumb_func
  68              	_getpid:
  69              	.LFB26:
  47:Src/syscalls.c **** 
  48:Src/syscalls.c **** int _getpid(void)
  49:Src/syscalls.c **** {
  70              		.loc 1 49 1
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccj7eOyW.s 			page 3


  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74 0000 80B5     		push	{r7, lr}
  75              	.LCFI2:
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 00AF     		add	r7, sp, #0
  80              	.LCFI3:
  81              		.cfi_def_cfa_register 7
  50:Src/syscalls.c ****   return 1;
  82              		.loc 1 50 10
  83 0004 0123     		movs	r3, #1
  51:Src/syscalls.c **** }
  84              		.loc 1 51 1
  85 0006 1800     		movs	r0, r3
  86 0008 BD46     		mov	sp, r7
  87              		@ sp needed
  88 000a 80BD     		pop	{r7, pc}
  89              		.cfi_endproc
  90              	.LFE26:
  92              		.section	.text._kill,"ax",%progbits
  93              		.align	1
  94              		.global	_kill
  95              		.syntax unified
  96              		.code	16
  97              		.thumb_func
  99              	_kill:
 100              	.LFB27:
  52:Src/syscalls.c **** 
  53:Src/syscalls.c **** int _kill(int pid, int sig)
  54:Src/syscalls.c **** {
 101              		.loc 1 54 1
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 8
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105 0000 80B5     		push	{r7, lr}
 106              	.LCFI4:
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 82B0     		sub	sp, sp, #8
 111              	.LCFI5:
 112              		.cfi_def_cfa_offset 16
 113 0004 00AF     		add	r7, sp, #0
 114              	.LCFI6:
 115              		.cfi_def_cfa_register 7
 116 0006 7860     		str	r0, [r7, #4]
 117 0008 3960     		str	r1, [r7]
  55:Src/syscalls.c ****   (void)pid;
  56:Src/syscalls.c ****   (void)sig;
  57:Src/syscalls.c ****   errno = EINVAL;
 118              		.loc 1 57 3
 119 000a FFF7FEFF 		bl	__errno
 120 000e 0300     		movs	r3, r0
 121              		.loc 1 57 9 discriminator 1
 122 0010 1622     		movs	r2, #22
 123 0012 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccj7eOyW.s 			page 4


  58:Src/syscalls.c ****   return -1;
 124              		.loc 1 58 10
 125 0014 0123     		movs	r3, #1
 126 0016 5B42     		rsbs	r3, r3, #0
  59:Src/syscalls.c **** }
 127              		.loc 1 59 1
 128 0018 1800     		movs	r0, r3
 129 001a BD46     		mov	sp, r7
 130 001c 02B0     		add	sp, sp, #8
 131              		@ sp needed
 132 001e 80BD     		pop	{r7, pc}
 133              		.cfi_endproc
 134              	.LFE27:
 136              		.section	.text._exit,"ax",%progbits
 137              		.align	1
 138              		.global	_exit
 139              		.syntax unified
 140              		.code	16
 141              		.thumb_func
 143              	_exit:
 144              	.LFB28:
  60:Src/syscalls.c **** 
  61:Src/syscalls.c **** void _exit (int status)
  62:Src/syscalls.c **** {
 145              		.loc 1 62 1
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              	.LCFI7:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 82B0     		sub	sp, sp, #8
 155              	.LCFI8:
 156              		.cfi_def_cfa_offset 16
 157 0004 00AF     		add	r7, sp, #0
 158              	.LCFI9:
 159              		.cfi_def_cfa_register 7
 160 0006 7860     		str	r0, [r7, #4]
  63:Src/syscalls.c ****   _kill(status, -1);
 161              		.loc 1 63 3
 162 0008 0123     		movs	r3, #1
 163 000a 5A42     		rsbs	r2, r3, #0
 164 000c 7B68     		ldr	r3, [r7, #4]
 165 000e 1100     		movs	r1, r2
 166 0010 1800     		movs	r0, r3
 167 0012 FFF7FEFF 		bl	_kill
 168              	.L7:
  64:Src/syscalls.c ****   while (1) {}    /* Make sure we hang here */
 169              		.loc 1 64 9
 170 0016 C046     		nop
 171 0018 FDE7     		b	.L7
 172              		.cfi_endproc
 173              	.LFE28:
 175              		.section	.text._read,"ax",%progbits
 176              		.align	1
ARM GAS  /tmp/ccj7eOyW.s 			page 5


 177              		.weak	_read
 178              		.syntax unified
 179              		.code	16
 180              		.thumb_func
 182              	_read:
 183              	.LFB29:
  65:Src/syscalls.c **** }
  66:Src/syscalls.c **** 
  67:Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  68:Src/syscalls.c **** {
 184              		.loc 1 68 1
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 24
 187              		@ frame_needed = 1, uses_anonymous_args = 0
 188 0000 80B5     		push	{r7, lr}
 189              	.LCFI10:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 86B0     		sub	sp, sp, #24
 194              	.LCFI11:
 195              		.cfi_def_cfa_offset 32
 196 0004 00AF     		add	r7, sp, #0
 197              	.LCFI12:
 198              		.cfi_def_cfa_register 7
 199 0006 F860     		str	r0, [r7, #12]
 200 0008 B960     		str	r1, [r7, #8]
 201 000a 7A60     		str	r2, [r7, #4]
  69:Src/syscalls.c ****   (void)file;
  70:Src/syscalls.c ****   int DataIdx;
  71:Src/syscalls.c **** 
  72:Src/syscalls.c ****   for (DataIdx = 0; DataIdx < len; DataIdx++)
 202              		.loc 1 72 16
 203 000c 0023     		movs	r3, #0
 204 000e 7B61     		str	r3, [r7, #20]
 205              		.loc 1 72 3
 206 0010 0AE0     		b	.L9
 207              	.L10:
  73:Src/syscalls.c ****   {
  74:Src/syscalls.c ****     *ptr++ = __io_getchar();
 208              		.loc 1 74 14
 209 0012 FFF7FEFF 		bl	__io_getchar
 210 0016 0100     		movs	r1, r0
 211              		.loc 1 74 9 discriminator 1
 212 0018 BB68     		ldr	r3, [r7, #8]
 213 001a 5A1C     		adds	r2, r3, #1
 214 001c BA60     		str	r2, [r7, #8]
 215              		.loc 1 74 12 discriminator 1
 216 001e CAB2     		uxtb	r2, r1
 217 0020 1A70     		strb	r2, [r3]
  72:Src/syscalls.c ****   {
 218              		.loc 1 72 43 discriminator 3
 219 0022 7B69     		ldr	r3, [r7, #20]
 220 0024 0133     		adds	r3, r3, #1
 221 0026 7B61     		str	r3, [r7, #20]
 222              	.L9:
  72:Src/syscalls.c ****   {
ARM GAS  /tmp/ccj7eOyW.s 			page 6


 223              		.loc 1 72 29 discriminator 1
 224 0028 7A69     		ldr	r2, [r7, #20]
 225 002a 7B68     		ldr	r3, [r7, #4]
 226 002c 9A42     		cmp	r2, r3
 227 002e F0DB     		blt	.L10
  75:Src/syscalls.c ****   }
  76:Src/syscalls.c **** 
  77:Src/syscalls.c ****   return len;
 228              		.loc 1 77 10
 229 0030 7B68     		ldr	r3, [r7, #4]
  78:Src/syscalls.c **** }
 230              		.loc 1 78 1
 231 0032 1800     		movs	r0, r3
 232 0034 BD46     		mov	sp, r7
 233 0036 06B0     		add	sp, sp, #24
 234              		@ sp needed
 235 0038 80BD     		pop	{r7, pc}
 236              		.cfi_endproc
 237              	.LFE29:
 239              		.section	.text._write,"ax",%progbits
 240              		.align	1
 241              		.weak	_write
 242              		.syntax unified
 243              		.code	16
 244              		.thumb_func
 246              	_write:
 247              	.LFB30:
  79:Src/syscalls.c **** 
  80:Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
  81:Src/syscalls.c **** {
 248              		.loc 1 81 1
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 24
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252 0000 80B5     		push	{r7, lr}
 253              	.LCFI13:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 7, -8
 256              		.cfi_offset 14, -4
 257 0002 86B0     		sub	sp, sp, #24
 258              	.LCFI14:
 259              		.cfi_def_cfa_offset 32
 260 0004 00AF     		add	r7, sp, #0
 261              	.LCFI15:
 262              		.cfi_def_cfa_register 7
 263 0006 F860     		str	r0, [r7, #12]
 264 0008 B960     		str	r1, [r7, #8]
 265 000a 7A60     		str	r2, [r7, #4]
  82:Src/syscalls.c ****   (void)file;
  83:Src/syscalls.c ****   int DataIdx;
  84:Src/syscalls.c **** 
  85:Src/syscalls.c ****   for (DataIdx = 0; DataIdx < len; DataIdx++)
 266              		.loc 1 85 16
 267 000c 0023     		movs	r3, #0
 268 000e 7B61     		str	r3, [r7, #20]
 269              		.loc 1 85 3
 270 0010 09E0     		b	.L13
ARM GAS  /tmp/ccj7eOyW.s 			page 7


 271              	.L14:
  86:Src/syscalls.c ****   {
  87:Src/syscalls.c ****     __io_putchar(*ptr++);
 272              		.loc 1 87 22
 273 0012 BB68     		ldr	r3, [r7, #8]
 274 0014 5A1C     		adds	r2, r3, #1
 275 0016 BA60     		str	r2, [r7, #8]
 276              		.loc 1 87 18
 277 0018 1B78     		ldrb	r3, [r3]
 278              		.loc 1 87 5
 279 001a 1800     		movs	r0, r3
 280 001c FFF7FEFF 		bl	__io_putchar
  85:Src/syscalls.c ****   {
 281              		.loc 1 85 43 discriminator 3
 282 0020 7B69     		ldr	r3, [r7, #20]
 283 0022 0133     		adds	r3, r3, #1
 284 0024 7B61     		str	r3, [r7, #20]
 285              	.L13:
  85:Src/syscalls.c ****   {
 286              		.loc 1 85 29 discriminator 1
 287 0026 7A69     		ldr	r2, [r7, #20]
 288 0028 7B68     		ldr	r3, [r7, #4]
 289 002a 9A42     		cmp	r2, r3
 290 002c F1DB     		blt	.L14
  88:Src/syscalls.c ****   }
  89:Src/syscalls.c ****   return len;
 291              		.loc 1 89 10
 292 002e 7B68     		ldr	r3, [r7, #4]
  90:Src/syscalls.c **** }
 293              		.loc 1 90 1
 294 0030 1800     		movs	r0, r3
 295 0032 BD46     		mov	sp, r7
 296 0034 06B0     		add	sp, sp, #24
 297              		@ sp needed
 298 0036 80BD     		pop	{r7, pc}
 299              		.cfi_endproc
 300              	.LFE30:
 302              		.section	.text._close,"ax",%progbits
 303              		.align	1
 304              		.global	_close
 305              		.syntax unified
 306              		.code	16
 307              		.thumb_func
 309              	_close:
 310              	.LFB31:
  91:Src/syscalls.c **** 
  92:Src/syscalls.c **** int _close(int file)
  93:Src/syscalls.c **** {
 311              		.loc 1 93 1
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 8
 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315 0000 80B5     		push	{r7, lr}
 316              	.LCFI16:
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 7, -8
 319              		.cfi_offset 14, -4
ARM GAS  /tmp/ccj7eOyW.s 			page 8


 320 0002 82B0     		sub	sp, sp, #8
 321              	.LCFI17:
 322              		.cfi_def_cfa_offset 16
 323 0004 00AF     		add	r7, sp, #0
 324              	.LCFI18:
 325              		.cfi_def_cfa_register 7
 326 0006 7860     		str	r0, [r7, #4]
  94:Src/syscalls.c ****   (void)file;
  95:Src/syscalls.c ****   return -1;
 327              		.loc 1 95 10
 328 0008 0123     		movs	r3, #1
 329 000a 5B42     		rsbs	r3, r3, #0
  96:Src/syscalls.c **** }
 330              		.loc 1 96 1
 331 000c 1800     		movs	r0, r3
 332 000e BD46     		mov	sp, r7
 333 0010 02B0     		add	sp, sp, #8
 334              		@ sp needed
 335 0012 80BD     		pop	{r7, pc}
 336              		.cfi_endproc
 337              	.LFE31:
 339              		.section	.text._fstat,"ax",%progbits
 340              		.align	1
 341              		.global	_fstat
 342              		.syntax unified
 343              		.code	16
 344              		.thumb_func
 346              	_fstat:
 347              	.LFB32:
  97:Src/syscalls.c **** 
  98:Src/syscalls.c **** 
  99:Src/syscalls.c **** int _fstat(int file, struct stat *st)
 100:Src/syscalls.c **** {
 348              		.loc 1 100 1
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 80B5     		push	{r7, lr}
 353              	.LCFI19:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 82B0     		sub	sp, sp, #8
 358              	.LCFI20:
 359              		.cfi_def_cfa_offset 16
 360 0004 00AF     		add	r7, sp, #0
 361              	.LCFI21:
 362              		.cfi_def_cfa_register 7
 363 0006 7860     		str	r0, [r7, #4]
 364 0008 3960     		str	r1, [r7]
 101:Src/syscalls.c ****   (void)file;
 102:Src/syscalls.c ****   st->st_mode = S_IFCHR;
 365              		.loc 1 102 15
 366 000a 3B68     		ldr	r3, [r7]
 367 000c 8022     		movs	r2, #128
 368 000e 9201     		lsls	r2, r2, #6
 369 0010 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccj7eOyW.s 			page 9


 103:Src/syscalls.c ****   return 0;
 370              		.loc 1 103 10
 371 0012 0023     		movs	r3, #0
 104:Src/syscalls.c **** }
 372              		.loc 1 104 1
 373 0014 1800     		movs	r0, r3
 374 0016 BD46     		mov	sp, r7
 375 0018 02B0     		add	sp, sp, #8
 376              		@ sp needed
 377 001a 80BD     		pop	{r7, pc}
 378              		.cfi_endproc
 379              	.LFE32:
 381              		.section	.text._isatty,"ax",%progbits
 382              		.align	1
 383              		.global	_isatty
 384              		.syntax unified
 385              		.code	16
 386              		.thumb_func
 388              	_isatty:
 389              	.LFB33:
 105:Src/syscalls.c **** 
 106:Src/syscalls.c **** int _isatty(int file)
 107:Src/syscalls.c **** {
 390              		.loc 1 107 1
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 8
 393              		@ frame_needed = 1, uses_anonymous_args = 0
 394 0000 80B5     		push	{r7, lr}
 395              	.LCFI22:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 7, -8
 398              		.cfi_offset 14, -4
 399 0002 82B0     		sub	sp, sp, #8
 400              	.LCFI23:
 401              		.cfi_def_cfa_offset 16
 402 0004 00AF     		add	r7, sp, #0
 403              	.LCFI24:
 404              		.cfi_def_cfa_register 7
 405 0006 7860     		str	r0, [r7, #4]
 108:Src/syscalls.c ****   (void)file;
 109:Src/syscalls.c ****   return 1;
 406              		.loc 1 109 10
 407 0008 0123     		movs	r3, #1
 110:Src/syscalls.c **** }
 408              		.loc 1 110 1
 409 000a 1800     		movs	r0, r3
 410 000c BD46     		mov	sp, r7
 411 000e 02B0     		add	sp, sp, #8
 412              		@ sp needed
 413 0010 80BD     		pop	{r7, pc}
 414              		.cfi_endproc
 415              	.LFE33:
 417              		.section	.text._lseek,"ax",%progbits
 418              		.align	1
 419              		.global	_lseek
 420              		.syntax unified
 421              		.code	16
ARM GAS  /tmp/ccj7eOyW.s 			page 10


 422              		.thumb_func
 424              	_lseek:
 425              	.LFB34:
 111:Src/syscalls.c **** 
 112:Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 113:Src/syscalls.c **** {
 426              		.loc 1 113 1
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 16
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430 0000 80B5     		push	{r7, lr}
 431              	.LCFI25:
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 7, -8
 434              		.cfi_offset 14, -4
 435 0002 84B0     		sub	sp, sp, #16
 436              	.LCFI26:
 437              		.cfi_def_cfa_offset 24
 438 0004 00AF     		add	r7, sp, #0
 439              	.LCFI27:
 440              		.cfi_def_cfa_register 7
 441 0006 F860     		str	r0, [r7, #12]
 442 0008 B960     		str	r1, [r7, #8]
 443 000a 7A60     		str	r2, [r7, #4]
 114:Src/syscalls.c ****   (void)file;
 115:Src/syscalls.c ****   (void)ptr;
 116:Src/syscalls.c ****   (void)dir;
 117:Src/syscalls.c ****   return 0;
 444              		.loc 1 117 10
 445 000c 0023     		movs	r3, #0
 118:Src/syscalls.c **** }
 446              		.loc 1 118 1
 447 000e 1800     		movs	r0, r3
 448 0010 BD46     		mov	sp, r7
 449 0012 04B0     		add	sp, sp, #16
 450              		@ sp needed
 451 0014 80BD     		pop	{r7, pc}
 452              		.cfi_endproc
 453              	.LFE34:
 455              		.section	.text._open,"ax",%progbits
 456              		.align	1
 457              		.global	_open
 458              		.syntax unified
 459              		.code	16
 460              		.thumb_func
 462              	_open:
 463              	.LFB35:
 119:Src/syscalls.c **** 
 120:Src/syscalls.c **** int _open(char *path, int flags, ...)
 121:Src/syscalls.c **** {
 464              		.loc 1 121 1
 465              		.cfi_startproc
 466              		@ args = 4, pretend = 12, frame = 8
 467              		@ frame_needed = 1, uses_anonymous_args = 1
 468 0000 0EB4     		push	{r1, r2, r3}
 469              	.LCFI28:
 470              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccj7eOyW.s 			page 11


 471 0002 80B5     		push	{r7, lr}
 472              	.LCFI29:
 473              		.cfi_def_cfa_offset 20
 474              		.cfi_offset 7, -20
 475              		.cfi_offset 14, -16
 476 0004 83B0     		sub	sp, sp, #12
 477              	.LCFI30:
 478              		.cfi_def_cfa_offset 32
 479 0006 00AF     		add	r7, sp, #0
 480              	.LCFI31:
 481              		.cfi_def_cfa_register 7
 482 0008 7860     		str	r0, [r7, #4]
 122:Src/syscalls.c ****   (void)path;
 123:Src/syscalls.c ****   (void)flags;
 124:Src/syscalls.c ****   /* Pretend like we always fail */
 125:Src/syscalls.c ****   return -1;
 483              		.loc 1 125 10
 484 000a 0123     		movs	r3, #1
 485 000c 5B42     		rsbs	r3, r3, #0
 126:Src/syscalls.c **** }
 486              		.loc 1 126 1
 487 000e 1800     		movs	r0, r3
 488 0010 BD46     		mov	sp, r7
 489 0012 03B0     		add	sp, sp, #12
 490              		@ sp needed
 491 0014 80BC     		pop	{r7}
 492 0016 08BC     		pop	{r3}
 493 0018 03B0     		add	sp, sp, #12
 494 001a 1847     		bx	r3
 495              		.cfi_endproc
 496              	.LFE35:
 498              		.section	.text._wait,"ax",%progbits
 499              		.align	1
 500              		.global	_wait
 501              		.syntax unified
 502              		.code	16
 503              		.thumb_func
 505              	_wait:
 506              	.LFB36:
 127:Src/syscalls.c **** 
 128:Src/syscalls.c **** int _wait(int *status)
 129:Src/syscalls.c **** {
 507              		.loc 1 129 1
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 8
 510              		@ frame_needed = 1, uses_anonymous_args = 0
 511 0000 80B5     		push	{r7, lr}
 512              	.LCFI32:
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 7, -8
 515              		.cfi_offset 14, -4
 516 0002 82B0     		sub	sp, sp, #8
 517              	.LCFI33:
 518              		.cfi_def_cfa_offset 16
 519 0004 00AF     		add	r7, sp, #0
 520              	.LCFI34:
 521              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccj7eOyW.s 			page 12


 522 0006 7860     		str	r0, [r7, #4]
 130:Src/syscalls.c ****   (void)status;
 131:Src/syscalls.c ****   errno = ECHILD;
 523              		.loc 1 131 3
 524 0008 FFF7FEFF 		bl	__errno
 525 000c 0300     		movs	r3, r0
 526              		.loc 1 131 9 discriminator 1
 527 000e 0A22     		movs	r2, #10
 528 0010 1A60     		str	r2, [r3]
 132:Src/syscalls.c ****   return -1;
 529              		.loc 1 132 10
 530 0012 0123     		movs	r3, #1
 531 0014 5B42     		rsbs	r3, r3, #0
 133:Src/syscalls.c **** }
 532              		.loc 1 133 1
 533 0016 1800     		movs	r0, r3
 534 0018 BD46     		mov	sp, r7
 535 001a 02B0     		add	sp, sp, #8
 536              		@ sp needed
 537 001c 80BD     		pop	{r7, pc}
 538              		.cfi_endproc
 539              	.LFE36:
 541              		.section	.text._unlink,"ax",%progbits
 542              		.align	1
 543              		.global	_unlink
 544              		.syntax unified
 545              		.code	16
 546              		.thumb_func
 548              	_unlink:
 549              	.LFB37:
 134:Src/syscalls.c **** 
 135:Src/syscalls.c **** int _unlink(char *name)
 136:Src/syscalls.c **** {
 550              		.loc 1 136 1
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 8
 553              		@ frame_needed = 1, uses_anonymous_args = 0
 554 0000 80B5     		push	{r7, lr}
 555              	.LCFI35:
 556              		.cfi_def_cfa_offset 8
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
 559 0002 82B0     		sub	sp, sp, #8
 560              	.LCFI36:
 561              		.cfi_def_cfa_offset 16
 562 0004 00AF     		add	r7, sp, #0
 563              	.LCFI37:
 564              		.cfi_def_cfa_register 7
 565 0006 7860     		str	r0, [r7, #4]
 137:Src/syscalls.c ****   (void)name;
 138:Src/syscalls.c ****   errno = ENOENT;
 566              		.loc 1 138 3
 567 0008 FFF7FEFF 		bl	__errno
 568 000c 0300     		movs	r3, r0
 569              		.loc 1 138 9 discriminator 1
 570 000e 0222     		movs	r2, #2
 571 0010 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccj7eOyW.s 			page 13


 139:Src/syscalls.c ****   return -1;
 572              		.loc 1 139 10
 573 0012 0123     		movs	r3, #1
 574 0014 5B42     		rsbs	r3, r3, #0
 140:Src/syscalls.c **** }
 575              		.loc 1 140 1
 576 0016 1800     		movs	r0, r3
 577 0018 BD46     		mov	sp, r7
 578 001a 02B0     		add	sp, sp, #8
 579              		@ sp needed
 580 001c 80BD     		pop	{r7, pc}
 581              		.cfi_endproc
 582              	.LFE37:
 584              		.section	.text._times,"ax",%progbits
 585              		.align	1
 586              		.global	_times
 587              		.syntax unified
 588              		.code	16
 589              		.thumb_func
 591              	_times:
 592              	.LFB38:
 141:Src/syscalls.c **** 
 142:Src/syscalls.c **** int _times(struct tms *buf)
 143:Src/syscalls.c **** {
 593              		.loc 1 143 1
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 8
 596              		@ frame_needed = 1, uses_anonymous_args = 0
 597 0000 80B5     		push	{r7, lr}
 598              	.LCFI38:
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 82B0     		sub	sp, sp, #8
 603              	.LCFI39:
 604              		.cfi_def_cfa_offset 16
 605 0004 00AF     		add	r7, sp, #0
 606              	.LCFI40:
 607              		.cfi_def_cfa_register 7
 608 0006 7860     		str	r0, [r7, #4]
 144:Src/syscalls.c ****   (void)buf;
 145:Src/syscalls.c ****   return -1;
 609              		.loc 1 145 10
 610 0008 0123     		movs	r3, #1
 611 000a 5B42     		rsbs	r3, r3, #0
 146:Src/syscalls.c **** }
 612              		.loc 1 146 1
 613 000c 1800     		movs	r0, r3
 614 000e BD46     		mov	sp, r7
 615 0010 02B0     		add	sp, sp, #8
 616              		@ sp needed
 617 0012 80BD     		pop	{r7, pc}
 618              		.cfi_endproc
 619              	.LFE38:
 621              		.section	.text._stat,"ax",%progbits
 622              		.align	1
 623              		.global	_stat
ARM GAS  /tmp/ccj7eOyW.s 			page 14


 624              		.syntax unified
 625              		.code	16
 626              		.thumb_func
 628              	_stat:
 629              	.LFB39:
 147:Src/syscalls.c **** 
 148:Src/syscalls.c **** int _stat(char *file, struct stat *st)
 149:Src/syscalls.c **** {
 630              		.loc 1 149 1
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 8
 633              		@ frame_needed = 1, uses_anonymous_args = 0
 634 0000 80B5     		push	{r7, lr}
 635              	.LCFI41:
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 7, -8
 638              		.cfi_offset 14, -4
 639 0002 82B0     		sub	sp, sp, #8
 640              	.LCFI42:
 641              		.cfi_def_cfa_offset 16
 642 0004 00AF     		add	r7, sp, #0
 643              	.LCFI43:
 644              		.cfi_def_cfa_register 7
 645 0006 7860     		str	r0, [r7, #4]
 646 0008 3960     		str	r1, [r7]
 150:Src/syscalls.c ****   (void)file;
 151:Src/syscalls.c ****   st->st_mode = S_IFCHR;
 647              		.loc 1 151 15
 648 000a 3B68     		ldr	r3, [r7]
 649 000c 8022     		movs	r2, #128
 650 000e 9201     		lsls	r2, r2, #6
 651 0010 5A60     		str	r2, [r3, #4]
 152:Src/syscalls.c ****   return 0;
 652              		.loc 1 152 10
 653 0012 0023     		movs	r3, #0
 153:Src/syscalls.c **** }
 654              		.loc 1 153 1
 655 0014 1800     		movs	r0, r3
 656 0016 BD46     		mov	sp, r7
 657 0018 02B0     		add	sp, sp, #8
 658              		@ sp needed
 659 001a 80BD     		pop	{r7, pc}
 660              		.cfi_endproc
 661              	.LFE39:
 663              		.section	.text._link,"ax",%progbits
 664              		.align	1
 665              		.global	_link
 666              		.syntax unified
 667              		.code	16
 668              		.thumb_func
 670              	_link:
 671              	.LFB40:
 154:Src/syscalls.c **** 
 155:Src/syscalls.c **** int _link(char *old, char *new)
 156:Src/syscalls.c **** {
 672              		.loc 1 156 1
 673              		.cfi_startproc
ARM GAS  /tmp/ccj7eOyW.s 			page 15


 674              		@ args = 0, pretend = 0, frame = 8
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676 0000 80B5     		push	{r7, lr}
 677              	.LCFI44:
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 7, -8
 680              		.cfi_offset 14, -4
 681 0002 82B0     		sub	sp, sp, #8
 682              	.LCFI45:
 683              		.cfi_def_cfa_offset 16
 684 0004 00AF     		add	r7, sp, #0
 685              	.LCFI46:
 686              		.cfi_def_cfa_register 7
 687 0006 7860     		str	r0, [r7, #4]
 688 0008 3960     		str	r1, [r7]
 157:Src/syscalls.c ****   (void)old;
 158:Src/syscalls.c ****   (void)new;
 159:Src/syscalls.c ****   errno = EMLINK;
 689              		.loc 1 159 3
 690 000a FFF7FEFF 		bl	__errno
 691 000e 0300     		movs	r3, r0
 692              		.loc 1 159 9 discriminator 1
 693 0010 1F22     		movs	r2, #31
 694 0012 1A60     		str	r2, [r3]
 160:Src/syscalls.c ****   return -1;
 695              		.loc 1 160 10
 696 0014 0123     		movs	r3, #1
 697 0016 5B42     		rsbs	r3, r3, #0
 161:Src/syscalls.c **** }
 698              		.loc 1 161 1
 699 0018 1800     		movs	r0, r3
 700 001a BD46     		mov	sp, r7
 701 001c 02B0     		add	sp, sp, #8
 702              		@ sp needed
 703 001e 80BD     		pop	{r7, pc}
 704              		.cfi_endproc
 705              	.LFE40:
 707              		.section	.text._fork,"ax",%progbits
 708              		.align	1
 709              		.global	_fork
 710              		.syntax unified
 711              		.code	16
 712              		.thumb_func
 714              	_fork:
 715              	.LFB41:
 162:Src/syscalls.c **** 
 163:Src/syscalls.c **** int _fork(void)
 164:Src/syscalls.c **** {
 716              		.loc 1 164 1
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720 0000 80B5     		push	{r7, lr}
 721              	.LCFI47:
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 7, -8
 724              		.cfi_offset 14, -4
ARM GAS  /tmp/ccj7eOyW.s 			page 16


 725 0002 00AF     		add	r7, sp, #0
 726              	.LCFI48:
 727              		.cfi_def_cfa_register 7
 165:Src/syscalls.c ****   errno = EAGAIN;
 728              		.loc 1 165 3
 729 0004 FFF7FEFF 		bl	__errno
 730 0008 0300     		movs	r3, r0
 731              		.loc 1 165 9 discriminator 1
 732 000a 0B22     		movs	r2, #11
 733 000c 1A60     		str	r2, [r3]
 166:Src/syscalls.c ****   return -1;
 734              		.loc 1 166 10
 735 000e 0123     		movs	r3, #1
 736 0010 5B42     		rsbs	r3, r3, #0
 167:Src/syscalls.c **** }
 737              		.loc 1 167 1
 738 0012 1800     		movs	r0, r3
 739 0014 BD46     		mov	sp, r7
 740              		@ sp needed
 741 0016 80BD     		pop	{r7, pc}
 742              		.cfi_endproc
 743              	.LFE41:
 745              		.section	.text._execve,"ax",%progbits
 746              		.align	1
 747              		.global	_execve
 748              		.syntax unified
 749              		.code	16
 750              		.thumb_func
 752              	_execve:
 753              	.LFB42:
 168:Src/syscalls.c **** 
 169:Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 170:Src/syscalls.c **** {
 754              		.loc 1 170 1
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 16
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 80B5     		push	{r7, lr}
 759              	.LCFI49:
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 84B0     		sub	sp, sp, #16
 764              	.LCFI50:
 765              		.cfi_def_cfa_offset 24
 766 0004 00AF     		add	r7, sp, #0
 767              	.LCFI51:
 768              		.cfi_def_cfa_register 7
 769 0006 F860     		str	r0, [r7, #12]
 770 0008 B960     		str	r1, [r7, #8]
 771 000a 7A60     		str	r2, [r7, #4]
 171:Src/syscalls.c ****   (void)name;
 172:Src/syscalls.c ****   (void)argv;
 173:Src/syscalls.c ****   (void)env;
 174:Src/syscalls.c ****   errno = ENOMEM;
 772              		.loc 1 174 3
 773 000c FFF7FEFF 		bl	__errno
ARM GAS  /tmp/ccj7eOyW.s 			page 17


 774 0010 0300     		movs	r3, r0
 775              		.loc 1 174 9 discriminator 1
 776 0012 0C22     		movs	r2, #12
 777 0014 1A60     		str	r2, [r3]
 175:Src/syscalls.c ****   return -1;
 778              		.loc 1 175 10
 779 0016 0123     		movs	r3, #1
 780 0018 5B42     		rsbs	r3, r3, #0
 176:Src/syscalls.c **** }
 781              		.loc 1 176 1
 782 001a 1800     		movs	r0, r3
 783 001c BD46     		mov	sp, r7
 784 001e 04B0     		add	sp, sp, #16
 785              		@ sp needed
 786 0020 80BD     		pop	{r7, pc}
 787              		.cfi_endproc
 788              	.LFE42:
 790              		.weak	__io_putchar
 791              		.weak	__io_getchar
 792              		.text
 793              	.Letext0:
 794              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 795              		.file 3 "/usr/arm-none-eabi/include/sys/_types.h"
 796              		.file 4 "/usr/arm-none-eabi/include/sys/_timeval.h"
 797              		.file 5 "/usr/arm-none-eabi/include/sys/_timespec.h"
 798              		.file 6 "/usr/arm-none-eabi/include/sys/types.h"
 799              		.file 7 "/usr/arm-none-eabi/include/sys/stat.h"
 800              		.file 8 "/usr/arm-none-eabi/include/sys/times.h"
 801              		.file 9 "/usr/arm-none-eabi/include/sys/errno.h"
ARM GAS  /tmp/ccj7eOyW.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
     /tmp/ccj7eOyW.s:23     .bss.__env:00000000 __env
     /tmp/ccj7eOyW.s:20     .bss.__env:00000000 $d
     /tmp/ccj7eOyW.s:30     .data.environ:00000000 environ
     /tmp/ccj7eOyW.s:27     .data.environ:00000000 $d
     /tmp/ccj7eOyW.s:33     .text.initialise_monitor_handles:00000000 $t
     /tmp/ccj7eOyW.s:39     .text.initialise_monitor_handles:00000000 initialise_monitor_handles
     /tmp/ccj7eOyW.s:62     .text._getpid:00000000 $t
     /tmp/ccj7eOyW.s:68     .text._getpid:00000000 _getpid
     /tmp/ccj7eOyW.s:93     .text._kill:00000000 $t
     /tmp/ccj7eOyW.s:99     .text._kill:00000000 _kill
     /tmp/ccj7eOyW.s:137    .text._exit:00000000 $t
     /tmp/ccj7eOyW.s:143    .text._exit:00000000 _exit
     /tmp/ccj7eOyW.s:176    .text._read:00000000 $t
     /tmp/ccj7eOyW.s:182    .text._read:00000000 _read
     /tmp/ccj7eOyW.s:240    .text._write:00000000 $t
     /tmp/ccj7eOyW.s:246    .text._write:00000000 _write
     /tmp/ccj7eOyW.s:303    .text._close:00000000 $t
     /tmp/ccj7eOyW.s:309    .text._close:00000000 _close
     /tmp/ccj7eOyW.s:340    .text._fstat:00000000 $t
     /tmp/ccj7eOyW.s:346    .text._fstat:00000000 _fstat
     /tmp/ccj7eOyW.s:382    .text._isatty:00000000 $t
     /tmp/ccj7eOyW.s:388    .text._isatty:00000000 _isatty
     /tmp/ccj7eOyW.s:418    .text._lseek:00000000 $t
     /tmp/ccj7eOyW.s:424    .text._lseek:00000000 _lseek
     /tmp/ccj7eOyW.s:456    .text._open:00000000 $t
     /tmp/ccj7eOyW.s:462    .text._open:00000000 _open
     /tmp/ccj7eOyW.s:499    .text._wait:00000000 $t
     /tmp/ccj7eOyW.s:505    .text._wait:00000000 _wait
     /tmp/ccj7eOyW.s:542    .text._unlink:00000000 $t
     /tmp/ccj7eOyW.s:548    .text._unlink:00000000 _unlink
     /tmp/ccj7eOyW.s:585    .text._times:00000000 $t
     /tmp/ccj7eOyW.s:591    .text._times:00000000 _times
     /tmp/ccj7eOyW.s:622    .text._stat:00000000 $t
     /tmp/ccj7eOyW.s:628    .text._stat:00000000 _stat
     /tmp/ccj7eOyW.s:664    .text._link:00000000 $t
     /tmp/ccj7eOyW.s:670    .text._link:00000000 _link
     /tmp/ccj7eOyW.s:708    .text._fork:00000000 $t
     /tmp/ccj7eOyW.s:714    .text._fork:00000000 _fork
     /tmp/ccj7eOyW.s:746    .text._execve:00000000 $t
     /tmp/ccj7eOyW.s:752    .text._execve:00000000 _execve

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
